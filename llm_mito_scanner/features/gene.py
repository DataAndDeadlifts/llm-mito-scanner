# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/02_map-genes-to-proteins.ipynb.

# %% auto 0
__all__ = ['get_comment_rows', 'get_num_annotations', 'get_annotations_iter', 'write_seqid_annotations',
           'breakdown_annotations_by_seqid']

# %% ../../nbs/02_map-genes-to-proteins.ipynb 3
import pandas as pd
from pathlib import Path
from tqdm.auto import tqdm
import math
import itertools

# %% ../../nbs/02_map-genes-to-proteins.ipynb 6
def get_comment_rows(annotation_file: Path):
    comment_idx = []
    with in_file.open("r") as f:
        for idx, line in enumerate(f):
            if line.startswith("#"):
                comment_idx.append(idx)
    return comment_idx


def get_num_annotations(annotation_file: Path):
    num_rows = 0
    with in_file.open("r") as f:
        for line in f:
            if not line.startswith("#"):
                num_rows += 1
    return num_rows


def get_annotations_iter(annotation_file: Path, comment_rows: list[str], chunk_size = 100000):
    annotations_iter = pd.read_csv(
        annotation_file, 
        sep="\t", 
        skiprows=comment_rows, 
        header=0,
        names=[
            "seqid", 
            "source",
            "type",
            "start",
            "end",
            "score",
            "strand",
            "phase",
            "attributes"
        ],
        na_values=["."],
        chunksize=chunk_size
    )
    return annotations_iter

# %% ../../nbs/02_map-genes-to-proteins.ipynb 9
def write_seqid_annotations(seq_id: int, seq_id_annotations: pd.DataFrame, write_path: Path):
    seq_id_write_path = write_path / f"{seq_id}.csv"
    mode = "w+"
    if seq_id_write_path.exists():
        mode = "a"
    seq_id_annotations.to_csv(seq_id_write_path, index=False, mode=mode)
    

def breakdown_annotations_by_seqid(
    annotation_file: Path, 
    write_path: Path,
    num_annotations: int,
    comment_rows: list[int],
    chunk_size: int = 100000
):
    for path in write_path.glob("*.csv"):
        path.unlink()
    annotations = get_annotations_iter(
        annotations_file,
        comment_rows=comment_rows,
        chunk_size=chunk_size
    )
    progress_bar = tqdm(total=math.ceil(num_annotations / chunk_size))
    for annotations_chunk in annotations:
        for seq_id, seq_id_annotations in tqdm(annotations_chunk.groupby("seqid"), position=1, leave=False):
            write_seqid_annotations(seq_id, seq_id_annotations, write_path)
        progress_bar.update(1)
    progress_bar.close()
